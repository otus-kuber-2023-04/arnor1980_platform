apiVersion: apps/v1
kind: Deployment
metadata:
  name: web # Название нашего объекта Deployment
spec:
  replicas: 3 # Начнем с одного пода
  selector: # Укажем, какие поды относятся к нашему Deployment:
    matchLabels: # - это поды с меткой
      app: web # app и ее значением web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
      maxSurge: 0
  template: # Теперь зададим шаблон конфигурации пода
    metadata:
      name: web # Название Pod
      labels: # Метки в формате key: value
        app: web
    spec: # Описание Pod
      containers: # Описание контейнеров внутри Pod
      - name: web # Название контейнера
        image: arnor1980/otus_kuber:web # Образ из которого создается контейнер
        readinessProbe: # Добавим проверку готовности
          httpGet: # веб-сервера отдавать
            path: /index.html # контент
            port: 8000
        livenessProbe:
          tcpSocket:
            port: 8000
        volumeMounts:
        - name: app
          mountPath: /app
      initContainers:
      - name: init-web
        image: busybox:1.32.0
        command: ['sh', '-c', 'wget -O- https://tinyurl.com/otus-k8s-intro | sh']
        volumeMounts:
        - name: app
          mountPath: /app
      volumes:
      - name: app
        emptyDir: {}
